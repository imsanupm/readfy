<%-include('partials/user/header')%>
  <style>
    body {
      background-color: #f8f9fa;
      font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
    }

    /* Main color scheme */
    :root {
      --primary-color: #3b5d50;
      --white-color: #ffffff;
      --light-gray: #f5f5f5;
      --text-color: #333333;
      --text-muted: #666666;
      --border-color: #e0e0e0;
    }



    /* Profile card styles */
    .profile-card {
      background-color: var(--white-color);
      border-radius: 10px;
      padding: 30px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
      margin-bottom: 20px;
    }

    .profile-image {
      width: 120px;
      height: 120px;
      border-radius: 50%;
      object-fit: cover;
      margin: 0 auto;
      display: block;
      position: relative;
      border: 3px solid var(--primary-color);
    }

    .profile-image-container {
      position: relative;
      width: 120px;
      margin: 0 auto;
    }

    .camera-icon {
      position: absolute;
      bottom: 0;
      right: 0;
      background-color: var(--white-color);
      border-radius: 50%;
      padding: 5px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      color: var(--primary-color);
      cursor: pointer;
    }

    .profile-details {
      text-align: center;
      margin-top: 20px;
    }

    .profile-name {
      font-size: 24px;
      font-weight: bold;
      margin-bottom: 10px;
      color: var(--primary-color);
    }

    .profile-contact {
      color: var(--text-muted);
      margin-bottom: 5px;
    }

    .action-buttons {
      display: flex;
      justify-content: center;
      gap: 10px;
      margin-top: 20px;
    }

    .action-button {
      padding: 8px 15px;
      border-radius: 20px;
      border: 1px solid var(--border-color);
      background-color: var(--white-color);
      color: var(--text-muted);
      display: flex;
      align-items: center;
      gap: 5px;
      transition: all 0.3s;
      cursor: pointer;
    }

    .action-button:hover {
      background-color: var(--primary-color);
      color: var(--white-color);
      border-color: var(--primary-color);
    }

    /* Stat cards styles */
    .stat-card {
      background-color: var(--white-color);
      border-radius: 10px;
      padding: 20px;
      text-align: center;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
      height: 100%;
      transition: transform 0.3s;
    }

    .stat-card:hover {
      transform: translateY(-5px);
    }

    .stat-icon {
      font-size: 24px;
      margin-bottom: 15px;
    }

    .stat-icon.orders {
      color: var(--primary-color);
    }

    .stat-icon.wallet {
      color: var(--primary-color);
    }

    .stat-icon.referrals {
      color: var(--primary-color);
    }

    .stat-value {
      font-size: 28px;
      font-weight: bold;
      margin-bottom: 5px;
      color: var(--primary-color);
    }

    .stat-label {
      color: var(--text-muted);
      font-size: 14px;
    }

    /* Responsive adjustments */
    @media (max-width: 992px) {
      .sidebar {
        margin-bottom: 20px;
      }
    }
  </style>
  <style>
    /* Modal Styles */
    .modal-overlay {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.5);
      z-index: 1000;
      justify-content: center;
      align-items: center;
    }

    .modal-container {
      background-color: white;
      border-radius: 8px;
      width: 100%;
      max-width: 500px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      overflow: hidden;
    }

    .modal-header {
      background-color: #3b5d50;
      color: white;
      padding: 15px 20px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .modal-header h2 {
      margin: 0;
      font-size: 1.5rem;
    }

    .close-button {
      background: none;
      border: none;
      color: white;
      font-size: 1.5rem;
      cursor: pointer;
    }

    .modal-body {
      padding: 20px;
    }

    /* Form Styles */
    .form-group {
      margin-bottom: 20px;
    }

    .form-group label {
      display: block;
      margin-bottom: 5px;
      font-weight: 500;
      color: #333;
    }

    .form-control {
      width: 100%;
      padding: 10px;
      border: 1px solid #ddd;
      border-radius: 4px;
      font-size: 1rem;
    }

    .form-control:focus {
      outline: none;
      border-color: #3b5d50;
      box-shadow: 0 0 0 2px rgba(59, 93, 80, 0.2);
    }

    .error-message {
      color: #e74c3c;
      font-size: 0.875rem;
      margin-top: 5px;
      min-height: 18px;
    }

    .form-actions {
      display: flex;
      justify-content: flex-end;
      gap: 10px;
      margin-top: 20px;
    }

    .btn {
      padding: 10px 20px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      font-size: 1rem;
      transition: background-color 0.2s;
    }

    .btn-primary {
      background-color: #3b5d50;
      color: white;
    }

    .btn-primary:hover {
      background-color: #2e4a40;
    }

    .btn-secondary {
      background-color: #e2e8f0;
      color: #333;
    }

    .btn-secondary:hover {
      background-color: #cbd5e0;
    }
  </style>
  <!DOCTYPE html>
  <html lang="en">

  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Home | My Account</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <link rel="stylesheet" href="styles.css">
  </head>

  <body>
    <div class="container py-5">
      <div class="row g-4">
        <!-- Sidebar -->
        <%- include("../../views/partials/user/profileSidebar") %>

        <!-- Main Content -->
        <div class="col-lg-9">
          <!-- Profile Card -->
          <div class="profile-card">
            <h5 class="mb-4">
              <i class="bi bi-person-circle" href="/books"></i> User Profile
            </h5>

            <div class="profile-image-container">
              <img
                src="https://hebbkx1anhila5yf.public.blob.vercel-storage.com/image-IJg75dhohqEAFLos5YV00JrkfYWMBc.png"
                alt="Profile Picture" class="profile-image">
              <div class="camera-icon">
                <i class="bi bi-camera"></i>
              </div>
            </div>

            <div class="profile-details">
              <p class="text-muted small mb-2">Click the camera icon to upload profile picture</p>
              <h3 class="profile-name">
                <%=user.name%>
              </h3>
              <p class="profile-contact"><i class="bi bi-telephone"></i>
                <%=user.phonenumber%>
              </p>
              <p class="profile-contact"><i class="bi bi-envelope"></i>
                <%=user.email%>
              </p>

              <div class="action-buttons">
                <button class="action-button" id="openEmailModalBtn">
                  <i class="bi bi-envelope"></i> Change Email
                </button>
                <button class="action-button" onclick="openChangePasswordModal()">
                  <i class="bi bi-lock"></i> Change Password
                </button>
              </div>
            </div>
          </div>

      

//here add the new items









          </div>
        </div>
      </div>
    </div>
  </body>
 
  <div id="changePasswordModal" class="modal-overlay">
    <div class="modal-container">
      <div class="modal-header">
        <h2>Change Password</h2>
        <button type="button" class="close-button" onclick="closeModal()">&times;</button>
      </div>
      <div class="modal-body">
        <form id="changePasswordForm" novalidate>
          <div class="form-group">
            <label for="oldPassword">Current Password</label>
            <input type="password" id="oldPassword" name="oldPassword" required class="form-control">
          </div>

          <div class="form-group">
            <label for="newPassword">New Password</label>
            <input type="password" id="newPassword" name="newPassword" required class="form-control" minlength="8">
          </div>

          <div class="form-group">
            <label for="confirmPassword">Confirm New Password</label>
            <input type="password" id="confirmPassword" name="confirmPassword" required class="form-control">
            <div id="passwordMatchError" class="error-message"></div>
          </div>

          <div class="form-actions">
            <button type="button" class="btn btn-secondary" onclick="closeModal()">Cancel</button>
            <button type="submit" class="btn btn-primary">Update Password</button>
          </div>
        </form>
      </div>
    </div>
  </div>




  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

  <!-- Custom CSS -->
  <style>
    .modal-backdrop.show {
      opacity: 0.5;
    }

    .otp-timer {
      font-weight: bold;
      color: #dc3545;
    }

    .hidden {
      display: none;
    }
  </style>

 

  <!-- Email Modal -->
  <div class="modal fade" id="emailModal" tabindex="-1" aria-labelledby="emailModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="emailModalLabel">Enter Your Email</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="emailForm">
            <div class="mb-3">
              <label for="email" class="form-label">Email address</label>
              <input type="email" class="form-control" id="email" placeholder="name@example.com" required>
              <div class="form-text">We'll send a verification code to this email.</div>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
              <button type="submit" class="btn btn-primary">Submit</button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>

  <!-- OTP Modal -->
  <div class="modal fade" id="otpModal" tabindex="-1" aria-labelledby="otpModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="otpModalLabel">Enter Verification Code</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <p>We've sent a verification code to <span id="emailDisplay" class="fw-bold"></span></p>
          <p>Code expires in: <span id="timerDisplay" class="otp-timer">02:00</span></p>

          <form id="otpForm" novalidate>
            <div class="mb-3">
              <label for="otp" class="form-label">Verification Code</label>
              <input type="text" class="form-control" id="otp" placeholder="Enter code" required>
            </div>
            <div class="d-flex justify-content-between align-items-center mb-3">
              <span class="text-muted small">Time remaining: <span id="timeRemaining"
                  class="otp-timer">02:00</span></span>
              <button type="button" id="resendBtn" class="btn btn-link p-0" disabled>Resend code</button>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
              <button type="submit" id="verifyBtn" class="btn btn-primary">Verify</button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
  

  <!-- Bootstrap JS Bundle with Popper -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

  </html>


<script>

</script>

  <script>
    let timerInterval;
    let emailModal;  
    let otpModal;

      document.addEventListener("DOMContentLoaded", function () {
     emailModal = new bootstrap.Modal(document.getElementById('emailModal'));
    const openEmailModalBtn = document.getElementById('openEmailModalBtn');
     otpModal = new bootstrap.Modal(document.getElementById('otpModal'));

    openEmailModalBtn.addEventListener('click', function () {
      emailModal.show();
    });




    document.getElementById('emailForm').addEventListener('submit', async (event) => {
      event.preventDefault();
      const emailvalue = document.getElementById('email').value;
      console.log('change email', emailvalue);
      // let otpModal = new bootstrap.Modal(document.getElementById('otpModal'));

      const response = await fetch('/changeEmail', {
        method: "POST",
        headers: { "content-type": "application/json" },
        body: JSON.stringify({
          email: emailvalue
        })
      })
      const result = await response.json();
      if (result.success) {
        console.log(result);
        Swal.fire({
          icon: "success",
          title: "Mission done",
          text: "We sended a otp to your email"

        }).then(()=>{
          emailModal.hide(); 
        otpModal.show();
        const expiryTimestamp = result.expiresAt;
        console.log('time',expiryTimestamp)
             startOTPTimer(expiryTimestamp);
        })
        
      } else {
        Swal.fire({
          icon: "success",
          title: "Mission Failed",
          text: result.message || "something went wrong"
        })
      }
    })

  });

    document.getElementById('otpForm').addEventListener('submit', async (event) => {
      event.preventDefault();
      const otpValue = document.getElementById('otp').value;
      console.log('user otp from front end',otpValue);
      const response = await fetch('/changeEmail', {
        method: "PATCH",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({ otp: otpValue })

      })
      const result = await response.json();
      if(result.success){
        Swal.fire({
          icon:"success",
          title:"Mission sucess",
          text:result.message,
        }).then(()=>{
         setTimeout(()=>{
          window.location.reload()
         },1000)
        })
       
      }else{
        Swal.fire({
          icon:"error",
          title:"Please try again",
          text:result.message,
        })
      }
    })




    function startOTPTimer(expiresAt) {
  clearInterval(timerInterval); // Clear any previous timers

  function updateTimer() {
    const now = Date.now();
    const remaining = Math.floor((expiresAt - now) / 1000); // seconds

    if (remaining <= 0) {
      clearInterval(timerInterval);

      document.getElementById('verifyBtn').disabled = true;
      document.getElementById('resendBtn').disabled = false;

      document.getElementById('timerDisplay').innerText = '00:00';
      document.getElementById('timeRemaining').innerText = '00:00';

      Swal.fire({
        icon: 'warning',
        title: 'OTP Expired',
        text: 'Please Please Try Again.'
      }).then(()=>{
        otpModal.hide();
        emailModal.show();
      });

      return;
    }

    const mins = String(Math.floor(remaining / 60)).padStart(2, '0');
    const secs = String(remaining % 60).padStart(2, '0');
    const formatted = `${mins}:${secs}`;

    document.getElementById('timerDisplay').innerText = formatted;
    document.getElementById('timeRemaining').innerText = formatted;
  }

  updateTimer(); // run immediately
  timerInterval = setInterval(updateTimer, 1000);
}


  </script>

  <script>
    // Function to open the modal
    function openChangePasswordModal() {
      document.getElementById('changePasswordModal').style.display = 'flex';
      document.body.style.overflow = 'hidden'; // Prevent scrolling when modal is open
    }

    // Function to close the modal
    function closeModal() {
      document.getElementById('changePasswordModal').style.display = 'none';
      document.body.style.overflow = 'auto'; // Re-enable scrolling

      // Reset form
      document.getElementById('changePasswordForm').reset();
      document.getElementById('passwordMatchError').textContent = '';
    }

    // Form validation
    document.getElementById('changePasswordForm').addEventListener('submit', function (event) {
      const newPassword = document.getElementById('newPassword').value;
      const confirmPassword = document.getElementById('confirmPassword').value;
      const errorElement = document.getElementById('passwordMatchError');

      if (newPassword !== confirmPassword) {
        event.preventDefault();
        errorElement.textContent = 'Passwords do not match';
      } else {
        errorElement.textContent = '';
      }
    });

    // Check password match on input
    document.getElementById('confirmPassword').addEventListener('input', function () {
      const newPassword = document.getElementById('newPassword').value;
      const confirmPassword = this.value;
      const errorElement = document.getElementById('passwordMatchError');

      if (confirmPassword && newPassword !== confirmPassword) {
        errorElement.textContent = 'Passwords do not match';
      } else {
        errorElement.textContent = '';
      }
    });
  </script>

  <script>
    document.getElementById("changePasswordForm").addEventListener('submit', async (event) => {
      event.preventDefault()
      const oldPasswordValue = document.getElementById('oldPassword').value;
      const newPasswordValue = document.getElementById('newPassword').value;
      const confirmPasswordValue = document.getElementById('confirmPassword').value

      const response = await fetch('/changePassword', {
        method: "PATCH",
        headers: { 'content-type': "application/json" },
        body: JSON.stringify({
          oldPassword: oldPasswordValue,
          newPassword: newPasswordValue,
          confirmPassword: confirmPasswordValue,
        })
      })
      const result = await response.json();
      if (result.success) {
        Swal.fire({
          icon: "success",
          title: "success",
          text: result.message
        }).then(() => {
          window.location.reload();
        })
      } else {
        Swal.fire({
          icon: "error",
          title: "Action Failed",
          text: result.message || 'an error occured from changing the password'
        })
      }
    })
  </script>
