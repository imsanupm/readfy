<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Payment Failed - Retry</title>
   <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap">
    <style>
        :root {
            --primary-color: #3b5d50;
            --white: #ffffff;
            --light-gray: #f8f9fa;
            --medium-gray: #e9ecef;
            --dark-gray: #6c757d;
            --error-red: #dc3545;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: "Poppins", sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            color: #333;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        .container {
            width: 100%;
            max-width: 450px;
        }

        .payment-card {
            background-color: var(--white);
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            padding: 40px 30px;
            text-align: center;
            animation: slideUp 0.6s ease-out;
            position: relative;
            overflow: hidden;
        }

        .payment-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, var(--primary-color), #2d4a3e);
        }

        .icon-container {
            margin-bottom: 30px;
        }

        .circle-background {
            width: 100px;
            height: 100px;
            background: linear-gradient(135deg, rgba(220, 53, 69, 0.1), rgba(220, 53, 69, 0.05));
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto;
            animation: pulse 2s infinite;
            border: 3px solid rgba(220, 53, 69, 0.1);
        }

        .error-icon {
            width: 50px;
            height: 50px;
            color: var(--error-red);
            animation: shake 0.5s ease-in-out;
        }

        .title {
            font-size: 32px;
            font-weight: 700;
            margin-bottom: 16px;
            color: #2c3e50;
            animation: fadeIn 0.8s ease-out 0.2s both;
        }

        .subtitle {
            font-size: 16px;
            line-height: 1.6;
            color: var(--dark-gray);
            margin-bottom: 30px;
            animation: fadeIn 0.8s ease-out 0.4s both;
        }

        .time-display {
            background: linear-gradient(135deg, var(--light-gray), var(--medium-gray));
            border-radius: 12px;
            padding: 16px 20px;
            margin-bottom: 30px;
            text-align: center;
            animation: fadeIn 0.8s ease-out 0.6s both;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
        }

        .time-icon {
            width: 20px;
            height: 20px;
            color: var(--primary-color);
        }

        .current-time {
            font-weight: 600;
            color: #2c3e50;
            font-size: 18px;
        }

        .buttons {
            display: flex;
            flex-direction: column;
            gap: 16px;
            animation: fadeIn 0.8s ease-out 0.8s both;
        }

        .btn {
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 16px 24px;
            border-radius: 12px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            border: none;
            outline: none;
            gap: 12px;
            text-decoration: none;
            position: relative;
            overflow: hidden;
        }

        .btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: left 0.5s;
        }

        .btn:hover::before {
            left: 100%;
        }

        .retry-btn {
            background: linear-gradient(135deg, var(--primary-color), #2d4a3e);
            color: var(--white);
            box-shadow: 0 4px 15px rgba(59, 93, 80, 0.3);
        }

        .retry-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(59, 93, 80, 0.4);
        }

        .retry-btn:active {
            transform: translateY(-1px);
        }

        .orders-btn {
            background-color: var(--white);
            color: var(--primary-color);
            border: 2px solid var(--primary-color);
            box-shadow: 0 4px 15px rgba(59, 93, 80, 0.1);
        }

        .orders-btn:hover {
            background-color: var(--primary-color);
            color: var(--white);
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(59, 93, 80, 0.3);
        }

        .orders-btn:active {
            transform: translateY(-1px);
        }

        .btn-icon {
            width: 20px;
            height: 20px;
            transition: transform 0.3s ease;
        }

        .btn:hover .btn-icon {
            transform: scale(1.1);
        }

        .loading {
            pointer-events: none;
            opacity: 0.7;
        }

        .loading .btn-icon {
            animation: spin 1s linear infinite;
        }

        /* Animations */
        @keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(50px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes pulse {
            0% {
                box-shadow: 0 0 0 0 rgba(220, 53, 69, 0.4);
                transform: scale(1);
            }
            50% {
                transform: scale(1.05);
            }
            70% {
                box-shadow: 0 0 0 15px rgba(220, 53, 69, 0);
            }
            100% {
                box-shadow: 0 0 0 0 rgba(220, 53, 69, 0);
                transform: scale(1);
            }
        }

        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-5px); }
            75% { transform: translateX(5px); }
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Responsive Design */
        @media (min-width: 768px) {
            .buttons {
                flex-direction: row;
            }

            .btn {
                flex: 1;
            }
        }

        @media (max-width: 480px) {
            .payment-card {
                padding: 30px 20px;
                margin: 10px;
            }

            .title {
                font-size: 28px;
            }

            .subtitle {
                font-size: 14px;
            }

            .btn {
                padding: 14px 20px;
                font-size: 15px;
            }

            .circle-background {
                width: 80px;
                height: 80px;
            }

            .error-icon {
                width: 40px;
                height: 40px;
            }
            
            .current-time {
                font-size: 16px;
            }
        }

        @media (max-width: 320px) {
            .payment-card {
                padding: 25px 15px;
            }

            .title {
                font-size: 24px;
            }
            
            .time-display {
                padding: 12px 15px;
            }
        }

        /* Hover effects for better interactivity */
        .payment-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);
        }

        /* Focus states for accessibility */
        .btn:focus {
            outline: 3px solid rgba(59, 93, 80, 0.3);
            outline-offset: 2px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="payment-card">
            <div class="icon-container">
                <div class="circle-background">
                    <svg class="error-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round">
                        <circle cx="12" cy="12" r="10"></circle>
                        <line x1="15" y1="9" x2="9" y2="15"></line>
                        <line x1="9" y1="9" x2="15" y2="15"></line>
                    </svg>
                </div>
            </div>
            
            <h1 class="title">Payment Failed</h1>
            <p class="subtitle">We couldn't process your payment. Please try again or check your order history.</p>
            
            <div class="time-display">
                <svg class="time-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <circle cx="12" cy="12" r="10"></circle>
                    <polyline points="12 6 12 12 16 14"></polyline>
                </svg>
                <span class="current-time" id="current-time">Loading time...</span>
            </div>
            
            <div class="buttons">
                <button class="btn retry-btn" id="retry-payment">
                    <svg class="btn-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M21 2v6h-6"></path>
                        <path d="M3 12a9 9 0 0 1 15-6.7L21 8"></path>
                        <path d="M3 22v-6h6"></path>
                        <path d="M21 12a9 9 0 0 1-15 6.7L3 16"></path>
                    </svg>
                    Retry Payment
                </button>
                
                <button class="btn orders-btn" id="my-orders">
                    <svg class="btn-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M9 17h6"></path>
                        <path d="M9 12h6"></path>
                        <path d="M9 7h6"></path>
                        <path d="M5 17h.01"></path>
                        <path d="M5 12h.01"></path>
                        <path d="M5 7h.01"></path>
                        <path d="M4 22h16a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2z"></path>
                    </svg>
                    My Orders
                </button>
            </div>
        </div>
    </div>


  

    <script>
document.addEventListener("DOMContentLoaded", function () {
  function updateTime() {
    const now = new Date();
    const formattedTime = now.toLocaleDateString('en-US', { 
      year: 'numeric', 
      month: 'short', 
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit',
      second: '2-digit'
    });
    document.getElementById("current-time").textContent = formattedTime;
  }

  updateTime();
  setInterval(updateTime, 1000);

  const retryBtn = document.getElementById("retry-payment");
  const ordersBtn = document.getElementById("my-orders");

  retryBtn.addEventListener("click", async function () {
    const orderId = "<%= razorpayOrderId %>"; // Full ID including "order_"

    const res = await fetch('/api/retryPaymentWithExistingOrder', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ orderId })
    });

    const data = await res.json();

    if (!data.success) {
      return Swal.fire("Error", data.message, "error");
    }

    const razorpay = new Razorpay({
      key: data.key,
      amount: data.amount,
      currency: "INR",
      name: "Readify",
      description: "Retry Payment",
      order_id: data.razorpayOrderId,
      handler: async function (response) {
        const verifyRes = await fetch("/verifyRazorpayPayment", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({
            razorpay_order_id: response.razorpay_order_id,
            razorpay_payment_id: response.razorpay_payment_id,
            razorpay_signature: response.razorpay_signature,
            originalOrderId: orderId
          })
        });

        const result = await verifyRes.json();
        if (result.success) {
          window.location.href = "/orderConfirmation";
        } else {
          Swal.fire("Payment Failed", result.message, "error");
        }
      },
      prefill: {
        name: data.user.name,
        email: data.user.email,
        contact: data.user.phone
      },
      theme: {
        color: "#3b5d50"
      }
    });

    razorpay.open();
  });

  ordersBtn.addEventListener("click", function () {
    window.location.href = "/orderListPage";
  });

  // Ripple effect (optional styling)
  document.querySelectorAll('.btn').forEach(button => {
    button.addEventListener('click', function (e) {
      const ripple = document.createElement('span');
      const rect = this.getBoundingClientRect();
      const size = Math.max(rect.width, rect.height);
      const x = e.clientX - rect.left - size / 2;
      const y = e.clientY - rect.top - size / 2;

      ripple.style.cssText = `
        position: absolute;
        width: ${size}px;
        height: ${size}px;
        left: ${x}px;
        top: ${y}px;
        background: rgba(255, 255, 255, 0.3);
        border-radius: 50%;
        transform: scale(0);
        animation: ripple 0.6s linear;
        pointer-events: none;
      `;

      this.appendChild(ripple);

      setTimeout(() => ripple.remove(), 600);
    });
  });

  const style = document.createElement('style');
  style.textContent = `
    @keyframes ripple {
      to {
        transform: scale(4);
        opacity: 0;
      }
    }
  `;
  document.head.appendChild(style);
});
</script>

</body>
</html>