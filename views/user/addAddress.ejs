<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Add New Address</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.0/font/bootstrap-icons.css">
  <style>
    /* Base Styles & Variables */
    :root {
      --primary: #3b5d50;
      --primary-dark: #2d4a3e;
      --primary-light: rgba(59, 93, 80, 0.1);
      --white: #ffffff;
      --light-gray: #f8f9fa;
      --medium-gray: #e0e0e0;
      --dark-gray: #333333;
      --text-color: #212529;
      --border-radius: 10px;
      --input-radius: 8px;
      --box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
      --transition: all 0.3s ease;
    }

    /* Global Styles */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: var(--light-gray);
      color: var(--text-color);
      line-height: 1.6;
    }

    /* Layout */
    .container {
      width: 100%;
      max-width: 1200px;
      margin: 0 auto;
      padding: 20px 15px;
    }

    .row {
      display: flex;
      flex-wrap: wrap;
      margin: 0 -15px;
    }

    .col-lg-3, .col-lg-9 {
      padding: 0 15px;
      width: 100%;
    }

    @media (min-width: 992px) {
      .col-lg-3 {
        flex: 0 0 25%;
        max-width: 25%;
      }
      .col-lg-9 {
        flex: 0 0 75%;
        max-width: 75%;
      }
    }

    /* Form Container */
    .form-container {
      background-color: var(--white);
      border-radius: var(--border-radius);
      box-shadow: var(--box-shadow);
      overflow: hidden;
    }

    .form-header {
      background-color: var(--primary);
      color: var(--white);
      padding: 20px 25px;
    }

    .form-title {
      font-size: 24px;
      font-weight: 600;
      margin: 0;
    }

    .form-subtitle {
      font-size: 14px;
      opacity: 0.9;
      margin-top: 5px;
    }

    .form-body {
      padding: 25px;
    }

    /* Form Grid */
    .form-row {
      display: flex;
      flex-wrap: wrap;
      margin: 0 -10px 15px;
    }

    .form-group {
      padding: 0 10px;
      margin-bottom: 20px;
      flex: 0 0 100%;
    }

    @media (min-width: 768px) {
      .form-group.col-md-6 {
        flex: 0 0 50%;
        max-width: 50%;
      }
    }

    .form-label {
      display: block;
      margin-bottom: 8px;
      font-weight: 500;
      color: var(--text-color);
    }

    .required::after {
      content: "*";
      color: #dc3545;
      margin-left: 4px;
    }

    .form-control {
      width: 100%;
      padding: 10px 15px;
      font-size: 16px;
      border: 1px solid var(--medium-gray);
      border-radius: var(--input-radius);
      background-color: var(--white);
      transition: var(--transition);
    }

    .form-control:focus {
      outline: none;
      border-color: var(--primary);
      box-shadow: 0 0 0 3px rgba(59, 93, 80, 0.2);
    }

    .form-select {
      width: 100%;
      padding: 10px 15px;
      font-size: 16px;
      border: 1px solid var(--medium-gray);
      border-radius: var(--input-radius);
      background-color: var(--white);
      transition: var(--transition);
      appearance: none;
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='%233b5d50' viewBox='0 0 16 16'%3E%3Cpath d='M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z'/%3E%3C/svg%3E");
      background-repeat: no-repeat;
      background-position: right 15px center;
      padding-right: 35px;
    }

    .form-select:focus {
      outline: none;
      border-color: var(--primary);
      box-shadow: 0 0 0 3px rgba(59, 93, 80, 0.2);
    }

    /* Buttons */
    .btn-container {
      display: flex;
      justify-content: space-between;
      margin-top: 20px;
    }

    .btn {
      padding: 10px 20px;
      font-size: 16px;
      font-weight: 500;
      border: none;
      border-radius: var(--input-radius);
      cursor: pointer;
      transition: var(--transition);
      text-decoration: none;
    }

    .btn-primary {
      background-color: var(--primary);
      color: var(--white);
    }

    .btn-primary:hover {
      background-color: var(--primary-dark);
    }

    .btn-outline {
      background-color: transparent;
      border: 1px solid var(--primary);
      color: var(--primary);
    }

    .btn-outline:hover {
      background-color: var(--primary-light);
    }

    /* Responsive Adjustments */
    @media (max-width: 768px) {
      .btn-container {
        flex-direction: column;
        gap: 10px;
      }
      
      .btn {
        width: 100%;
      }
    }
  </style>
 <style>
  .error-message {
    color: red;
    font-size: 0.875rem;
    margin-top: 4px;
  }

  .form-control.invalid {
    border-color: red;
  }
</style>
  
</head>
<body>
  <!-- Header placeholder -->
  <header>
    <%- include('partials/user/header') %>
  </header>

  <div class="container">
    <div class="row">
     
     
        <%- include('partials/user/profileSidebar') %>
     

      <!-- Main content -->
      <div class="col-lg-9">
        <div class="form-container">
          <div class="form-header">
            <h1 class="form-title">Add New Address</h1>
            <p class="form-subtitle">Please fill in the details below to add a new delivery address</p>
          </div>
      
          <div class="form-body">
            <form id="addressForm" novalidate>
              <div class="form-row">
                <div class="form-group col-md-6">
                  <label for="fullName" class="form-label required">Full Name</label>
                  <input type="text" class="form-control" id="fullName" name="fullName" placeholder="Enter your full name" required>
                  <div class="error-message" id="fullNameError"></div>
                </div>
      
                <div class="form-group col-md-6">
                  <label for="mobile" class="form-label required">Mobile Number</label>
                  <input type="tel" class="form-control" id="mobile" name="mobile" placeholder="Enter your mobile number" required>
                  <div class="error-message" id="mobileError"></div>
                </div>
              </div>
      
              <div class="form-row">
                <div class="form-group col-md-6">
                  <label for="pincode" class="form-label required">Pincode</label>
                  <input type="text" class="form-control" id="pincode" name="pincode" placeholder="Enter pincode" required>
                  <div class="error-message" id="pincodeError"></div>
                </div>
              </div>
      
              <div class="form-row">
                <div class="form-group col-md-6">
                  <label for="state" class="form-label required">State</label>
                  <input type="text" class="form-control" id="state" name="state" placeholder="Enter state" required>
                  <div class="error-message" id="stateError"></div>
                </div>
      
                <div class="form-group col-md-6">
                  <label for="district" class="form-label required">District</label>
                  <input type="text" class="form-control" id="district" name="district" placeholder="Enter district" required>
                  <div class="error-message" id="districtError"></div>
                </div>
              </div>
      
              <div class="form-row">
                <div class="form-group col-md-6">
                  <label for="villageCity" class="form-label required">Village/City</label>
                  <input type="text" class="form-control" id="villageCity" name="villageCity" placeholder="Enter village or city" required>
                  <div class="error-message" id="villageCityError"></div>
                </div>
              </div>
      
              <div class="form-row">
                <div class="form-group col-md-6">
                  <label for="houseFlat" class="form-label required">House/Flat</label>
                  <input type="text" class="form-control" id="houseFlat" name="houseFlat" placeholder="Enter house or flat number" required>
                  <div class="error-message" id="houseFlatError"></div>
                </div>
      
                <div class="form-group col-md-6">
                  <label for="landmark" class="form-label required">Landmark</label>
                  <input type="text" class="form-control" id="landmark" name="landmark" placeholder="Enter nearby landmark" required>
                  <div class="error-message" id="landmarkError"></div>
                </div>
              </div>
      
              <div class="form-row">
                <div class="form-group">
                  <label for="addressType" class="form-label required">Address Type</label>
                  <select class="form-select" id="addressType" name="addressType" required>
                    <option value="Home" selected>Home</option>
                    <option value="Work">Work</option>
                    <option value="Other">Other</option>
                  </select>
                  <div class="error-message" id="addressTypeError"></div>
                </div>
              </div>
      
              <div class="checkbox-container">
                <input type="checkbox" class="form-checkbox" id="makeDefault" name="makeDefault">
                <label for="makeDefault" class="checkbox-label">Make this my default address</label>
              </div>
      
              <div class="btn-container">
                <a href="/myAdress" class="btn btn-outline">Cancel</a>
                <button type="submit" class="btn btn-primary">Save Address</button>
              </div>
            </form>
          </div>
        </div>
      </div>
      
    </div>
  </div>

  <!-- Footer placeholder -->
  <footer>
    <%- include('partials/user/footer') %>
  </footer>

  <script>
    document.getElementById("addressForm").addEventListener('submit', async (event) => {
      event.preventDefault();
  
      // Clear previous errors
      const fields = ["fullName", "mobile", "pincode", "state", "district", "villageCity", "houseFlat", "landmark", "addressType"];
      let hasError = false;
  
      fields.forEach(field => {
        const input = document.getElementById(field);
        const errorDiv = document.getElementById(field + "Error");
        input.classList.remove("invalid");
        errorDiv.textContent = "";
      });
  
      function showError(fieldId, message) {
        const input = document.getElementById(fieldId);
        const errorDiv = document.getElementById(fieldId + "Error");
        input.classList.add("invalid");
        errorDiv.textContent = message;
        hasError = true;
      }
  
      const fullName = document.getElementById('fullName').value.trim();
      const mobile = document.getElementById('mobile').value.trim();
      const pincode = document.getElementById('pincode').value.trim();
      const state = document.getElementById('state').value.trim();
      const district = document.getElementById('district').value.trim();
      const villageCity = document.getElementById('villageCity').value.trim();
      const houseFlat = document.getElementById('houseFlat').value.trim();
      const landmark = document.getElementById('landmark').value.trim();
      const addressType = document.getElementById('addressType').value;
      const makeDefault = document.getElementById('makeDefault').checked;
  
      const namePattern = /^[A-Za-z\s]+$/;
      const pinPattern = /^[0-9]{6}$/;
      const phonePattern = /^[0-9]{10}$/;
  
      if (!fullName) {
        showError("fullName", "Full name is required");
      } else if (!namePattern.test(fullName)) {
        showError("fullName", "Name should not contain numbers");
      }
  
      if (!mobile || !phonePattern.test(mobile)) {
        showError("mobile", "Enter a valid 10-digit mobile number");
      }
  
      if (!pincode || !pinPattern.test(pincode)) {
        showError("pincode", "Enter a valid 6-digit pincode");
      }
  
      if (!state) {
        showError("state", "State is required");
      } else if (!namePattern.test(state)) {
        showError("state", "State should not contain numbers");
      }
  
      if (!district) {
  showError("district", "District is required");
} else if (!namePattern.test(district)) {
  showError("district", "District should not contain numbers");
}

  
      if (!villageCity) {
        showError("villageCity", "Village/City is required");
      } else if (!namePattern.test(villageCity)) {
        showError("villageCity", "Village/City should not contain numbers");
      }
  
      if (!houseFlat) {
        showError("houseFlat", "House/Flat is required");
      }
  
      if (!landmark) {
        showError("landmark", "Landmark is required");
      }
  
      if (!addressType) {
        showError("addressType", "Select an address type");
      }
  
      if (hasError) return;
  
      // All validations passed
      const response = await fetch('/addNewAddress', {
        method: "POST",
        headers: { "content-type": "application/json" },
        body: JSON.stringify({
          fullName,
          mobile,
          pincode,
          state,
          district,
          villagecity: villageCity,
          houseFlat,
          landMark: landmark,
          adressType: addressType,
          makeDefault
        })
      });
  
      const result = await response.json();
  
      if (result.success) {
        Swal.fire({
          icon: "success",
          title: "Success",
          text: result.message || 'Your data was saved successfully. Enjoy your shopping!'
        }).then(() => {
          window.location.reload();
        });
      } else {
        Swal.fire({
          icon: "error",
          title: "Please Try Again",
          text: result.message,
        });
      }
    });
  </script>
  
  
  

</body>
</html>

